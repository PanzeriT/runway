{{ define "loader.go" }}
package config

import (
	"fmt"
	"log/slog"
	"os"

	"github.com/joho/godotenv"
	"{{ .ModuleName }}/shared/exit"
)

type envionmentContraints interface {
	bool | int | string
}

func getenv(key string) string {
	value := os.Getenv(key)
	if value == "" {
		AdminConfig.err = fmt.Errorf("%s is undefined; %v", key, AdminConfig.err)
	}
	return value
}

func MustLoadConfig() {
	err := godotenv.Load()
	if err != nil {
		slog.Error("unable to load configuration", "err", err)
	}

	AdminConfig.JWTSecret = getenv("JWT_SECRET")

	if !AdminConfig.IsValid() {
		exit.WithCode(exit.ConfigurationError, AdminConfig.err)
	}

	// logger config
	logger := slog.New(slog.NewJSONHandler(os.Stdout, nil))
	slog.SetDefault(logger)
}
{{ end }}
